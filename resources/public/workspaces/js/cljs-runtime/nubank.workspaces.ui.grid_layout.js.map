{"version":3,"sources":["nubank/workspaces/ui/grid_layout.cljs"],"mappings":"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","names":["nubank.workspaces.ui.grid-layout/column-size","nubank.workspaces.ui.grid-layout/max-columns","nubank.workspaces.ui.grid-layout/columns-step","nubank.workspaces.ui.grid-layout/breakpoints","cljs.core/vec","iter__4529__auto__","s__72164","cljs.core/LazySeq","temp__5753__auto__","cljs.core/seq","cljs.core/chunked-seq?","c__4527__auto__","size__4528__auto__","cljs.core/count","b__72166","cljs.core/chunk-buffer","i__72165","cljs.core/-nth","cljs.core/chunk-append","cljs.core/chunk-cons","cljs.core/chunk","iter__72163","cljs.core/chunk-rest","cljs.core/first","cljs.core/cons","cljs.core/rest","i","cljs.core.range","c","nubank.workspaces.ui.grid-layout/grid-item-css","props","G__72182","garden.selectors/&","garden.selectors/not","nubank.workspaces.ui.grid-layout/WidthProvider","js/ReactGridLayout.WidthProvider","nubank.workspaces.ui.grid-layout/Responsive","js/ReactGridLayout.Responsive","nubank.workspaces.ui.grid-layout/GridWithWidth","options__55349__auto__","com.fulcrologic.fulcro.components/wrapped-render","com.fulcrologic.fulcro.components/props","js/nubank","js/nubank.workspaces","js/nubank.workspaces.ui","js/nubank.workspaces.ui.grid-layout","js/nubank.workspaces.ui.grid-layout.GridLayout","props__55350__auto__","this__55351__auto__","temp__5751__auto__","cljs.core.get","init-state__55352__auto__","obj72213","G__72214","G__72215","goog.object/get","obj72219","com.fulcrologic.fulcro.components/configure-component!","nubank.workspaces.ui.grid-layout/GridLayout","this","nubank.workspaces.ui.core/card-border-radius","map__72197","cljs.core/PROTOCOL_SENTINEL","cljs.core.apply","cljs.core/hash-map","onBreakpointChange","width","goog.object/getValueByKeys","G__72199","com.fulcrologic.fulcro-css.localized-dom/node","bp","cljs.core/rseq","p1__72186#","cljs.core.filter","G__72205","G__72206","G__72207","com.fulcrologic.fulcro-css.localized-dom/create-element","cljs.core/clj->js","p1__72187#","cljs.core.assoc","goog.object/set","com.fulcrologic.fulcro.components/children","nubank.workspaces.ui.grid-layout/grid-layout","com.fulcrologic.fulcro.components.factory","cljs.core/chunk-first"],"sourcesContent":["(ns nubank.workspaces.ui.grid-layout\n  (:require [com.fulcrologic.fulcro.components :as fp]\n            [com.fulcrologic.fulcro-css.localized-dom :as dom]\n            [garden.selectors :as gs]\n            [goog.object :as gobj]\n            [cljsjs.react-grid-layout]\n            [nubank.workspaces.ui.core :as uc]))\n\n(def column-size 120)\n(def max-columns 20)\n(def columns-step 2)\n\n(def breakpoints\n  (vec\n    (for [i (range 0 max-columns columns-step)\n          :let [c (+ i columns-step)]]\n      {:id         (str \"c\" c)\n       :cols       c\n       :breakpoint (if (zero? i) 0 (* c column-size))})))\n\n(defn grid-item-css [props]\n  [:$react-grid-item\n   [(gs/& (gs/not :.react-grid-placeholder))\n    props]])\n\n(def WidthProvider js/ReactGridLayout.WidthProvider)\n(def Responsive js/ReactGridLayout.Responsive)\n\n(def GridWithWidth (WidthProvider Responsive))\n\n(fp/defsc GridLayout\n  [this props]\n  {:css               [[:$react-grid-layout\n                        {:position   \"relative\"\n                         :transition \"height 200ms ease\"}]\n\n                       [:$react-grid-item\n                        {:transition          \"all 200ms ease\"\n                         :transition-property \"left, top\"}\n\n                        [:&$cssTransforms\n                         {:transition-property \"transform\"}]\n\n                        [:&$resizing\n                         {:z-index     \"1\"\n                          :will-change \"width, height\"}]\n\n                        [:&$react-draggable-dragging\n                         {:transition  \"none\"\n                          :z-index     \"3\"\n                          :will-change \"transform\"}]\n\n                        [:&$react-grid-placeholder\n                         {:background          \"red\"\n                          :opacity             \"0.2\"\n                          :transition-duration \"100ms\"\n                          :z-index             \"2\"\n                          :-webkit-user-select \"none\"\n                          :-moz-user-select    \"none\"\n                          :-ms-user-select     \"none\"\n                          :-o-user-select      \"none\"\n                          :user-select         \"none\"}]\n\n                        [:> [:$react-resizable-handle\n                             {:position \"absolute\"\n                              :width    \"20px\"\n                              :height   \"20px\"\n                              :bottom   \"0\"\n                              :right    \"0\"\n                              :cursor   \"se-resize\"}\n\n                             [:&:after\n                              {:content       \"\\\"\\\"\"\n                               :position      \"absolute\"\n                               :right         \"5px\"\n                               :bottom        \"5px\"\n                               :width         \"5px\"\n                               :height        \"5px\"\n                               :border-right  \"2px solid rgba(0, 0, 0, 0.4)\"\n                               :border-bottom \"2px solid rgba(0, 0, 0, 0.4)\"}]]]]\n\n                       [:$react-resizable\n                        {:position \"relative\"}]\n\n                       [:$react-resizable-handle\n                        {:position            \"absolute\"\n                         :width               \"20px\"\n                         :height              \"20px\"\n                         :bottom              \"0\"\n                         :right               \"0\"\n                         :background-position \"bottom right\"\n                         :padding             \"0 3px 3px 0\"\n                         :background-repeat   \"no-repeat\"\n                         :background-origin   \"content-box\"\n                         :box-sizing          \"border-box\"\n                         :cursor              \"se-resize\"}]\n\n                       (grid-item-css {:background    \"#fff\"\n                                       :border-radius uc/card-border-radius\n                                       :display       \"flex\"})]\n   :componentDidMount (fn [this]\n                        (let [{:keys [onBreakpointChange]} (fp/props this)\n                              width (-> (gobj/getValueByKeys this \"grid\")\n                                        (dom/node)\n                                        (gobj/get \"offsetWidth\"))\n                              bp    (->> (rseq breakpoints)\n                                         (filter #(>= width (:breakpoint %)))\n                                         first\n                                         :id)]\n                          (onBreakpointChange bp)))}\n  (dom/create-element GridWithWidth (clj->js (assoc props :ref #(gobj/set this \"grid\" %)))\n    (fp/children this)))\n\n(def grid-layout (fp/factory GridLayout))\n"]}