{"version":3,"sources":["nubank/workspaces/ui/events.cljs"],"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","names":["nubank.workspaces.ui.events/KEYS","cljs.spec.alpha/def-impl","cljs.core/set","cljs.core/keys","cljs.spec.alpha/and-spec-impl","cljs.core/string?","cljs.spec.alpha.spec_impl","p1__70439#","p1__70440#","clojure.string.split","clojure.string.join","cljs.spec.alpha/cat-impl","cljs.spec.alpha/rep-impl","cljs.core/pos-int?","nubank.workspaces.ui.events/pd","f","e","nubank.workspaces.ui.events/parse-keystroke","keystroke","temp__5751__auto__","map__70467","cljs.core/PROTOCOL_SENTINEL","cljs.core.apply","cljs.core/hash-map","cljs.core.get","modifiers","key","cljs.spec.alpha/conform","nubank.workspaces.ui.events/match-key?","key-code","cljs.core._EQ_","goog.object/get","nubank.workspaces.ui.events/match-modifiers?","p1__70473#","cljs.core/every?","p__70476","map__70477","nubank.workspaces.ui.events/match-keystroke?","nubank.workspaces.ui.events/get-target","target","cljs.core/fn?","js/document.body","nubank.workspaces.ui.events/attach-event","this","map__70486","event","action","com.fulcrologic.fulcro.components/props","js/Error","goog.object/set","nubank.workspaces.ui.events/dettach-event","handler","map__70492","options__55349__auto__","com.fulcrologic.fulcro.components/wrapped-render","js/nubank","js/nubank.workspaces","js/nubank.workspaces.ui","js/nubank.workspaces.ui.events","js/nubank.workspaces.ui.events.DomListener","props__55350__auto__","this__55351__auto__","init-state__55352__auto__","obj70548","G__70549","G__70550","obj70554","com.fulcrologic.fulcro.components/configure-component!","nubank.workspaces.ui.events/DomListener","props","com.fulcrologic.fulcro.dom/macro-create-element*","nubank.workspaces.ui.events/dom-listener*","com.fulcrologic.fulcro.components.factory","p__70561","map__70562","nubank.workspaces.ui.events/dom-listener","click","G__70567","cljs.core.assoc","matcher","G__70570","p1__70558#","js/console.warn","p__70575","map__70577","nubank.workspaces.ui.events/create-event","G__70579","js/document.createEvent","nubank.workspaces.ui.events/trigger-event","evt"],"sourcesContent":["(ns nubank.workspaces.ui.events\n  (:require [cljs.spec.alpha :as s]\n            [clojure.string :as str]\n            [goog.object :as gobj]\n            [com.fulcrologic.fulcro.dom :as dom]\n            [com.fulcrologic.fulcro.components :as fp]))\n\n(def KEYS\n  {\"backspace\" 8\n   \"tab\"       9\n   \"return\"    13\n   \"escape\"    27\n   \"space\"     32\n   \"left\"      37\n   \"up\"        38\n   \"right\"     39\n   \"down\"      40\n   \"slash\"     191\n   \"0\"         48\n   \"1\"         49\n   \"2\"         50\n   \"3\"         51\n   \"4\"         52\n   \"5\"         53\n   \"6\"         54\n   \"7\"         55\n   \"8\"         56\n   \"9\"         57\n   \"a\"         65\n   \"b\"         66\n   \"c\"         67\n   \"d\"         68\n   \"e\"         69\n   \"f\"         70\n   \"g\"         71\n   \"h\"         72\n   \"i\"         73\n   \"j\"         74\n   \"k\"         75\n   \"l\"         76\n   \"m\"         77\n   \"n\"         78\n   \"o\"         79\n   \"p\"         80\n   \"q\"         81\n   \"r\"         82\n   \"s\"         83\n   \"t\"         84\n   \"u\"         85\n   \"v\"         86\n   \"w\"         87\n   \"x\"         88\n   \"y\"         89\n   \"z\"         90\n   \";\"         186\n   \"=\"         187\n   \",\"         188\n   \"minus\"     189\n   \".\"         190\n   \"/\"         191\n   \"[\"         219\n   \"\\\\\"        220\n   \"]\"         221\n   \"'\"         222})\n\n(s/def ::key-string (set (keys KEYS)))\n(s/def ::modifier #{\"ctrl\" \"alt\" \"meta\" \"shift\"})\n(s/def ::keystroke\n  (s/and string?\n    (s/conformer #(str/split % #\"-\") #(str/join \"-\" %))\n    (s/cat :modifiers (s/* ::modifier) :key ::key-string)))\n(s/def ::key-code pos-int?)\n\n(defn pd\n  \"Wraps function f with a call to .preventDefault on the event. This is a helper\n  to compose with event callback functions so they also cancel the default browser\n  event handler.\n\n  Usage:\n\n  (dom/a {:href \\\"#\\\" :onClick (pd #(console.log :clicked))} \\\"No default\\\")\"\n  [f]\n  (fn [e]\n    (.preventDefault e)\n    (f e)))\n\n(defn parse-keystroke [keystroke]\n  (if-let [{:keys [modifiers key]} (s/conform ::keystroke keystroke)]\n    {::key-code  (get KEYS key)\n     ::modifiers modifiers}))\n\n(defn match-key? [e key-code]\n  (if key-code\n    (= (gobj/get e \"keyCode\") key-code)\n    true))\n\n(defn match-modifiers? [e modifiers]\n  (if modifiers\n    (every? #(gobj/get e (str % \"Key\")) modifiers)\n    true))\n\n(defn match-keystroke? [e {::keys [modifiers key-code]}]\n  (and (match-key? e key-code) (match-modifiers? e modifiers)))\n\n(defn get-target [target]\n  (cond\n    (fn? target) (target)\n    target target\n    :else js/document.body))\n\n(defn attach-event [this]\n  (let [{::keys [target event action]} (fp/props this)\n        target (get-target target)]\n    (assert event \"You must provide an event to dom-listener\")\n    (gobj/set this \"handler\" action)\n    (if target\n      (.addEventListener target event action))))\n\n(defn dettach-event [this]\n  (if-let [handler (gobj/get this \"handler\")]\n    (let [{::keys [target event]} (fp/props this)\n          target (get-target target)]\n      (if target\n        (.removeEventListener target event handler)))))\n\n(fp/defsc DomListener [this props]\n  {:componentDidMount    (fn [this] (attach-event this))\n   :componentWillUnmount (fn [this] (dettach-event this))}\n\n  (dom/noscript nil))\n\n(def dom-listener* (fp/factory DomListener))\n\n(defn dom-listener [{::keys [keystroke click action] :as event}]\n  (cond\n    click\n    (dom-listener* (assoc event ::event \"click\" ::action click))\n\n    keystroke\n    (if-let [matcher (parse-keystroke keystroke)]\n      (dom-listener* (assoc event\n                       ::event \"keydown\"\n                       ::action #(if (match-keystroke? % matcher) (action %))))\n      (js/console.warn (str \"Keystroke `\" keystroke \"` is not valid.\")))\n\n    :else\n    (dom-listener* event)))\n\n(defn create-event [{::keys [event]}]\n  (doto (js/document.createEvent \"HTMLEvents\")\n    (.initEvent event true true)))\n\n(defn trigger-event [target evt]\n  (.dispatchEvent target (create-event evt)))\n"]}